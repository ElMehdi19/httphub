basePath: /
consumes:
- application/json
- application/x-www-form-urlencoded
host: localhost:5000
info:
  contact:
    email: mehdi@httphub.io
    name: El Mehdi Rami
    url: https://mehdi.codes
  description: |-
    An HTTP Request/Response service fully written in Go.<br>
    <b>Run locally</b>: <code>$ docker run -p 5000:5000 iammehdi/httphub</code>
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: HTTPHub
  version: 1.0.0
paths:
  /auth/basic-auth/{user}/{passwd}:
    get:
      operationId: Auth
      parameters:
      - description: username
        in: path
        name: user
      - description: password
        in: path
        name: passwd
      produces:
      - application/json
      responses:
        "200":
          description: Successful authentication
        "404":
          description: Unsuccessful authentication
      schemes:
      - http
      - https
      summary: Basic Auth protected route.
      tags:
      - Auth
  /auth/basic/{user}/{passwd}:
    get:
      operationId: Auth
      parameters:
      - description: username
        in: path
        name: user
      - description: password
        in: path
        name: passwd
      produces:
      - application/json
      responses:
        "200":
          description: Successful authentication
        "401":
          description: Unsuccessful authentication
      schemes:
      - http
      - https
      summary: Basic Auth protected route.
      tags:
      - Auth
  /auth/bearer:
    get:
      operationId: Auth
      parameters:
      - description: Bearer Auth header
        in: headers
        name: Authorization
      produces:
      - application/json
      responses:
        "200":
          description: Successful authentication
        "401":
          description: Unsuccessful authentication
      schemes:
      - http
      - https
      summary: Bearer Auth protected route.
      tags:
      - Auth
  /delete:
    delete:
      operationId: postRequest
      produces:
      - application/json
      responses:
        "200":
          description: The request's DELETE params.
      schemes:
      - http
      - https
      summary: The request's DELETE params.
      tags:
      - HTTP Methods
  /get:
    get:
      operationId: getRequest
      produces:
      - application/json
      responses:
        "200":
          description: The request's query args.
      schemes:
      - http
      - https
      summary: The request's query args.
      tags:
      - HTTP Methods
  /headers:
    get:
      operationId: Request
      produces:
      - application/json
      responses:
        "200":
          description: The request's headers
      schemes:
      - http
      - https
      summary: The request's headers.
      tags:
      - Request inspection
  /ip:
    get:
      operationId: Request
      produces:
      - application/json
      responses:
        "200":
          description: The request's IP address
      schemes:
      - http
      - https
      summary: The request's origin.
      tags:
      - Request inspection
  /patch:
    patch:
      operationId: postRequest
      produces:
      - application/json
      responses:
        "200":
          description: The request's PATCH params.
      schemes:
      - http
      - https
      summary: The request's PATCH params.
      tags:
      - HTTP Methods
  /post:
    post:
      operationId: postRequest
      produces:
      - application/json
      responses:
        "200":
          description: The request's post params.
      schemes:
      - http
      - https
      summary: The request's POST params.
      tags:
      - HTTP Methods
  /put:
    put:
      operationId: postRequest
      produces:
      - application/json
      responses:
        "200":
          description: The request's PUT params.
      schemes:
      - http
      - https
      summary: The request's PUT params.
      tags:
      - HTTP Methods
  /request:
    get:
      operationId: Request
      produces:
      - application/json
      responses:
        "200":
          description: The request's IP address, user agent and headers
      schemes:
      - http
      - https
      summary: The request's information.
      tags:
      - Request inspection
  /response-headers:
    get:
      operationId: Response
      produces:
      - application/json
      responses:
        "200":
          description: Response headers.
      schemes:
      - http
      - https
      summary: Returns the passed query string args as headers.
      tags:
      - Response inspection
  /status/{code}:
    get:
      operationId: codes
      parameters:
      - description: Status code
        in: path
        name: code
        required: true
      produces:
      - application/json
      - text/plain
      responses:
        "100":
          description: Information responses
        "200":
          description: Success
        "300":
          description: Redirection
        "400":
          description: Client errors
        "500":
          description: Server errors
      schemes:
      - http
      - https
      summary: Return the given status code
      tags:
      - Status codes
  /user-agent:
    get:
      operationId: Request
      produces:
      - application/json
      responses:
        "200":
          description: The request's user-agent
      schemes:
      - http
      - https
      summary: The request's user-agent.
      tags:
      - Request inspection
produces:
- application/json
- text/html
- text/plain
schemes:
- http
- https
swagger: "2.0"
